var tipuesearch = {"pages": [{'title': 'About', 'text': '四設計二甲 李彥廷 李茂廷 \n 團員學號 : 41023122 \xa0 41023124 \n 隊員 resume 倉儲網站 \n https://github.com/mdecd2023/resume-41023122 \n https://github.com/mdecd2023/resume-41023124 \n \n 團隊倉儲網站 \n https://github.com/mdecd2023/2a-pj1ag11 \xa0 \n 團隊靜態網頁 \n https://mdecd2023.github.io/2a-pj1ag11 \xa0 \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'w3', 'text': 'w3 - 2023.03.10.16 已經完成分組網頁者, 可以得到分組網頁評分 \n w3 - 請各組寫一個程式判定 2a 哪一組已經完成網頁建置. \n w3 開始執行 \xa0 https://mde.tw/pjcopsim/content/bubbleRobTutorial.html \n 星期四補課時間, 要驗收 Tutorial1 (心得, 展示頁面說明各組員所完成項目, 說明該組的專案規劃) \n \n', 'tags': '', 'url': 'w3.html'}, {'title': 'w3-1', 'text': '設定 ssh cd學號@stud2.cycu.org \n 依照之前網站之筆記操作並設定 \n https://teams.microsoft.com/_#/school/ClassNotes/w5?threadId=19:a398eb1b5dc841b690f68a4e4dcefdb7@thread.tacv2&ctx=channel \xa0 \n \n', 'tags': '', 'url': 'w3-1.html'}, {'title': 'w4', 'text': '驗收2a各組的tutorial1程式與心得報告 \n', 'tags': '', 'url': 'w4.html'}, {'title': 'w5', 'text': '創建考試網頁帳號 \n 考試網頁 :  https://exam.cycu.org \n \n \n \n 2a w5 建立考試帳號 \n \n \n \n \n \n \n https://exam.cycu.org \xa0(2023/3/20 08:14-08:20) 第一階段建立帳號 \n 沒有建立帳號者, 請在以下交談登錄學號 \n 本學期, 要求更改一次帳號對應密碼, 酌扣學期成績五分.\xa0 \n \n', 'tags': '', 'url': 'w5.html'}, {'title': 'w6-1', 'text': '2a w6線上考試 \n 考試網址 :  https://exam.cycu.org/ \n 考試成績 \n 41023124 \n \n \n \n 2a_w6 \n 2023-03-27 08:15:00 \n 2023-03-27 08:25:00 \n 100.000 / 100.000 (100%) \n \n \n \n \n 各組需加入pj1組別 \n \n 請注意: 各班 只有小組組長 可以加入以下所述的統整協同作業倉儲. 另一位小組成員 必須透過 pull requests  對統整協同作業倉儲進行改版, 且由各小組組長負責審核是否合併. \n \n 協同產品設計實習的 Project 1 目的是讓學員可以從  https://mde.tw/cd2023/content/BubbleRob.html  導引練習中, 了解 CoppeliaSim 套件中的諸多功能以及用法, 其中包括利用近接感測器偵測障礙物, 並透過 Lua script 控制 bubbleRob 雙輪車的移動. 為了讓各組學員了解在多人協同模式下, 開發機電資產品流程中必須面臨的許多議題(若要直接在瀏覽器中建立多方協同的場景, 可以透過  remote API ( 導引 ) 與  Visualization Stream  功能), \n \n 自 W5 起將建立一個由 pj1 各組組長所組成的統整作業, 目標是利用兩台 BubbleRob 雙輪車在一足球場景中進行對戰, 其中在雙方球門設置感測器, 雙方各有一名 BubbleRob 負責運球, 在規定時間內, 每進一球後, 即透過程式重新從球場中線發球重啟賽局. 其中各組必須設法配置計分板顯示比賽剩餘時間與比分. \n \n w5-w6 時段各組可以各自在小組的網站與場景中進行設計與討論, 但自 w7 起所有設計內容與討論必須置入 football-apj1(甲班) 與 football-bpj1(乙班) 的作業倉儲中. \n \n 本統整作業預計 在 w9 各班期中考週時段進行發表 , 各小組成員將進行自評與互評, 並在各班統整協同作業倉儲中,  完成一份 web-based 簡報以及 pdf 格式的統整作業報告 . \n \n 請注意: 各班所建立的 football-apj1 與 football-bpj1 倉儲將統一由 scrum-1 帳號建立 team 並僅允許各兩人一組的組長加入, 其餘未加入統整倉儲的分組組員必須透過 pull requests 對統整倉儲進行改版, 且必須由該分組組員所屬的組長對組員所建立的 pull requests 進行審核, 以決定是否將其合併至統整倉儲. \n \n 各班統整倉儲將開啟 Discussions 功能, 直接與倉儲有關的議題討論, 請透過倉儲中的 Issues 功能提出, 而其他各式問題的討論則必須直接在各班統整倉儲的 Discussions 中進行. \n \n 2a 各組組長 請透過 作業連結 , 加入 football 作業中的 apj1 團隊: \n \n https://github.com/mdecd2023/football-apj1 \n \n 2b 各組組長 請透過 作業連結 , 加入 football 作業中的 bpj1 團隊: \n \n https://github.com/mdecd2023/football-bpj1 \n \n a, b 兩班所有與 pj1 統整專案執行有關的議題, 請統一至  https://github.com/mdecd2023/football-apj1/discussions  提出或進行討論. \n \n \n \n \n \n', 'tags': '', 'url': 'w6-1.html'}, {'title': 'w6', 'text': '請各組在 pj1 分組網頁中, 以 w6 (H2) 作為頁面標題, 直接在頁面中, 列出完成連線的分組與未完成連線的分組組員學號. \n \n 2a w6-2 Python remoteAPI 連線查驗結果.txt \n 2a 學號與 Githbu 帳號對應名單 \n \n 完成連結組別 \xa0ag1 41023147 41023143 \xa0ag2 41023146 41023148 \xa0ag5 41023121 41023134  \xa0ag6 41023104 41023112  \xa0ag7 41023108 41023103 \xa0ag8 41023107 41023102 \xa0ag9 41023130 41023142  ag10 41023119 41023138  ag11 41023124 41023122 ag12 41023114 41023126  ag13 41023133 41023140  ag14 41023153 41023113 ag15 41023154 41023135 ag16 41023132 41023151  ag17 41023118 41023120 ag18 41023131 41039138 未完成連結組別 ag3 41023110 41023108 ag4 41023125 41023128 ag19 41023101 41023141 ag20 41023109 41023105', 'tags': '', 'url': 'w6.html'}, {'title': 'w6-2', 'text': '利用上禮拜下載之資料夾中的 Python remote API 在 IPv4 網路架構下, \n 將小組分組代號送到 192.168.1.8 scene 主機的 19997 埠號場景中, \n 並且送回訊息為 : Hello,bubbleRob,我們是agx分組 ! \n 利用 one_link_robot_remoteAPI_velocity.ttt 和 simpleTest_19997.py 修改', 'tags': '', 'url': 'w6-2.html'}, {'title': '專案規劃', 'text': '', 'tags': '', 'url': '專案規劃.html'}, {'title': 'tutorial1', 'text': '\n \xa0 https://mde.tw/pjcopsim/content/bubbleRobTutorial.html \xa0文章網址 \n 這篇教學文章介紹了如何使用 Python 和 CoppeliaSim 模擬機器人的運動。這個案例中，我們可以控制一個機器人在環境中移動並且避免撞到其他障礙物。該教程分為幾個部分，包括如何設置 CoppeliaSim 環境、如何使用 Python 來編程機器人運動、如何設置障礙物和如何定義運動策略。這個案例還涉及到機器人的傳感器，以及如何使用 Python 代碼設置傳感器的參數，這個案例可以幫助人們了解機器人模擬的基本概念和相關技術，例如機器人的運動控制、環境設置和運動策略的定義。同時，它也提供了一個簡單而有趣的例子，可以幫助初學者更好地理解和掌握 CoppeliaSim 和 Python 的使用，這篇教學文章提供了一個有趣和實用的案例，可以幫助人們更好地理解機器人模擬和相關技術的應用。它還可以為初學者提供一個良好的入門點，幫助他們更快地掌握 CoppeliaSim 和 Python 的使用技巧。 \n \n 檔案:  2a-pj1ag11tutorial1 \n \n 1.球體碰撞 \n \n \n \n \n \n   \n \n \n \n \n \n \n \n \n 2.製作本體 \n \n \n \n \n \n \n \n   \n \n 3.完全體與碰撞物 \n \n \n \n \n \n \n \n \n \n   \n \n \n \n \n \n 4.導入程式(分別導入本體與掃描的程式) \n \n \n \n \n \n   \n \n \n \n \n \n \n \n 5.多次偵測 \n \n \n \n \n \n   \n \n \n \n \n \n \n 41023122製作心得 :   \xa0\xa0\xa0\xa0\xa0 1. 我發現如果是像上課兩人同時使用，要git pull就要很注意了，需要先事前討論各自要的主題才能製作，不然辛苦做的都會產生問題。  \xa0\xa0\xa0\xa0\xa0 2. 在創立動態網頁的時候，我們都創好了但是唯獨我無法更新最新動態，試了很久都無法解決，找了許多班上做完的也解決不了，好像是儲存位置問題還什麼的，還好最後老師幫我解決了問題。 \n 41023124製作心得 : 本組製作參考2a-pj1ag10，在製作過程中依照網頁教學與同學的教學影片去做設定，雖然沒有遇到太大的困難，可是在排序的方面排錯了，導致最後做完再跑程式時零件分離，沒法正常運作，但經過正確的排序後，又發現自己再導入兩個python程式時，導入到錯的零件，導致偵測系統無法正常運作，不過排除困難後，也完成了這次的任務。 \n', 'tags': '', 'url': 'tutorial1.html'}, {'title': 'cd2023a w4 note', 'text': '\n 在 CoppeliaSim 中, scene 與 model 有何不同? \n 在 CoppeliaSim scene 中, 何謂 clean model? \n 如何在 CoppeliaSim scene 中, 如何利用 Lua 以及 Python 建立 primitive type object, 並利用程式設定物件位置? \n CoppeliaSim .ttt 檔案格式與 .simscene.xml 檔案格式有何不同? \n \n 1. \n 在CoppeliaSim中，Scene和Model是兩個不同的概念。\xa0 Scene是一個完整的仿真環境，包括模型、場景設置、物理引擎、傳感器、控制器等組件，用於實現一些具體的仿真任務。可以將Scene看作是一個仿真世界，其中包含了各種不同的元素和組件，可以通過編程來控制和操縱這些元素和組件的行為。\xa0 Model是指場景中的某個特定對象，可以是一個機器人、一個傳感器、一個障礙物等等。 Model是場景的基本組成部分，每個Model都可以設置自己的材質、紋理、運動學參數等等，並通過編程來控制它的行為。在CoppeliaSim中，一個Scene可以包含多個Model，而一個Model也可以被多個Scene所共用。\xa0 因此，可以將Scene看作是一個包含多個Model的集合，而Model則是Scene中的具體元素。 \n 2. \n 在CoppeliaSim的Scene中，Clean Model是指一個不包含任何重複實體和無用部件的模型。這些重複實體和無用部件可能會導致模擬過程中的性能問題。 Clean Model的創建包括確保每個實體都有唯一的標識符、刪除不必要的部件或對象、對模型進行優化等步驟。通過保持模型的“精簡”，可以提高模擬的效率和精度，並減少模擬過程中的問題。 \n (答案參考ChatGPT) \n', 'tags': '', 'url': 'cd2023a w4 note.html'}, {'title': 'cd2023a w4 note-2', 'text': "\n 在 CoppeliaSim 中, scene 與 model 有何不同? \n 在 CoppeliaSim scene 中, 何謂 clean model? \n 如何在 CoppeliaSim scene 中, 如何利用 Lua 以及 Python 建立 primitive type object, 並利用程式設定物件位置? \n CoppeliaSim .ttt 檔案格式與 .simscene.xml 檔案格式有何不同? \n \n \xa03. \n 在CoppeliaSim中，可以使用Lua或Python腳本來創建基本類型（Primitive Type）的對象，並通過編程的方式來控制它們的位置。\xa0 以下是在CoppeliaSim中使用Lua腳本創建Primitive Type對象並設置位置的示例： \n -- 创建一个立方体Primitive Type对象 cubeHandle=sim.createPureShape(1,16,{0.1,0.1,0.1},0.2) -- 将对象位置设置为x=1、y=2、z=3的位置 sim.setObjectPosition(cubeHandle,-1,{1,2,3}) \n 上述代碼中，第一行創建了一個大小為0.1×0.1×0.1的立方體對象，並將其存儲在cubeHandle變量中。第二行使用sim.setObjectPosition函數將該對象的位置設置為x=1、y=2、z=3的位置。\xa0 以下是在CoppeliaSim中使用Python腳本創建Primitive Type對象並設置位置的示例： \n 导入Python API库 import sim # 连接到CoppeliaSim sim.simxFinish(-1) clientID=sim.simxStart('127.0.0.1',19999,True,True,5000,5) # 创建一个立方体Primitive Type对象 errorCode, cubeHandle = sim.simxCreatePureShape(clientID,1,16,[0.1,0.1,0.1],0.2, None, sim.simx_opmode_blocking) # 将对象位置设置为x=1、y=2、z=3的位置 errorCode = sim.simxSetObjectPosition(clientID, cubeHandle, -1, [1,2,3], sim.simx_opmode_blocking) \n 上述代碼中，首先通過simxStart函數連接到CoppeliaSim，並使用simxCreatePureShape函數創建一個大小為0.1×0.1×0.1的立方體對象。然後使用simxSetObjectPosition函數將該對象的位置設置為x=1、y=2、z=3的位置。\xa0 無論使用Lua還是Python，都可以通過類似的方式來創建Primitive Type對象並設置位置。 \n 4. \n CoppeliaSim中，.ttt文件和.simscene.xml文件都是場景文件的格式，但它們在文件結構和用途上有一些不同。\xa0 .ttt文件是CoppeliaSim的早期版本使用的格式，它是一個二進製文件，包含場景中所有對象的完整信息，包括位置、大小、材質、關節等。這種格式的優點是加載速度快，但缺點是不利於版本控制和與其他軟件集成。\xa0 相比之下，.simscene.xml文件是CoppeliaSim較新版本使用的格式，它是一個基於XML的文本文件，包含了場景的所有信息，可以在文本編輯器中輕鬆編輯和查看。這種格式的優點是易於版本控制和與其他軟件集成，但缺點是加載速度相對較慢。\xa0 因此，通常情況下建議使用.simscene.xml格式的場景文件，因為它更加靈活，可維護性更高，而且能夠與其他軟件集成。如果您正在使用較早的CoppeliaSim版本，可能需要使用.ttt格式的場景文件，但建議儘早升級到最新版本以獲得更好的性能和更多的功能。 \n (答案參考ChatGPT) \n \n", 'tags': '', 'url': 'cd2023a w4 note-2.html'}, {'title': 'football', 'text': '2023_remoteapi_bubbleRob.7z \xa0 ( 2aw6 如何在 chatGPT 協助下開發 remote API 控制程式.mp4 ) \n 透過鍵盤控制 bubbleRob 的場景與 remote API 程式.7z \xa0 ( 示範操作影片.mp4 ) \n 利用newbing_bubbleRob_remoteapi1.py >tools>go 執行程式 \n 並且下載pip install keyboard 才可利用鍵盤控制bubbleRob執行前進 , 後退和左右等指令來操控機器人 \n \n \n 1.製作球場步驟 \n \n \n \n \n \n   \n \n \n \n \n \n', 'tags': '', 'url': 'football.html'}]};